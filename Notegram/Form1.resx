<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        guCql9j1AAAAAElFTkSuQmCC
</value>
  </data>
</root>